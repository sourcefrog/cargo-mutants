# 1. Populate the release object when a new release is created
#    in GitHub.
#    <https://github.com/taiki-e/create-gh-release-action>
# 2. Attach binaries to releases
#    <https://github.com/taiki-e/upload-rust-binary-action>
# 3. Publish to crates.io.

name: Release

permissions:
  contents: write

# TODO: Use "environment:release" for some security benefits?

on:
  # release:
  #   types:
  #     - created
  push:
    branches:
      - 532-trusted-publishing-to-crates-io
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: NEWS.md
          token: ${{ secrets.GITHUB_TOKEN }}
          # TODO: maybe also `branch: main` as in general we
          # should not release from other branches
  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
          # Note that glob pattern is not supported yet.
          bin: cargo-mutants
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ matrix.target }}
  publish-crate:
    runs-on: ubuntu-latest
    needs: upload-assets

    permissions:
      id-token: write     # Required for OIDC token exchange

    steps:
    - uses: actions/checkout@v4
    - uses: rust-lang/crates-io-auth-action@v1
      id: auth
    - run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
