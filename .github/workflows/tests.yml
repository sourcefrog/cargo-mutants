name: Tests

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [macOS-latest]
        # ubuntu-latest, windows-latest, 

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Show Cargo version
      run: cargo --version
    - name: Configure Mac OS environment variables
      # From https://github.com/ankitects/anki/commit/43f5db648078e9cd4e18ca2559eae396858327d1
      if: matrix.os == 'macos-latest'
      run: |
        # gnu tar for cache issue
        echo "::add-path::/usr/local/opt/gnu-tar/libexec/gnubin"
    - name: Check tar version
      if: matrix.os == 'macOS-latest'
      run: |
        which tar
        tar --version
    - name: Cache Cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-just-registry-${{ hashFiles('Cargo.lock') }}
    - name: Show Cargo version again
      run: cargo --version
    - name: Cargo target cache
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.lock') }}
    - name: Show Cargo version again 3
      run: cargo --version
    - name: Build
      run: cargo build --all-targets
    - name: Test
      run: cargo test

